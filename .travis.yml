language: cpp
dist: precise
compiler:
  - gcc
sudo: false
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - boost-latest
    packages:
      - gcc-4.8
      - g++-4.8
      - libboost-filesystem1.55-dev
      - libboost-program-options1.55-dev
      - libboost-regex1.55-dev
      - libboost-date-time1.55-dev
      - libboost-thread1.55-dev
      - libboost-log1.55-dev
      - libboost-locale1.55-dev
      - libboost-chrono1.55-dev
  coverity_scan:
    project:
      name: "puppetlabs/leatherman"
      description: "Build submitted via Travis CI"
    notification_email: michael.smith@puppetlabs.com
    build_command_prepend: "cov-configure --comptype gcc --compiler gcc-4.8 --template && $USERDIR/bin/cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH=$USERDIR -DLEATHERMAN_GETTEXT=OFF ."
    build_command: "make"
    branch_pattern: coverity_scan

before_install:
  # Use a predefined install location; cppcheck requires the cfg location is defined at compile-time.
  - mkdir -p $USERDIR
  # grab a pre-built cmake 3.2.3
  - wget https://s3.amazonaws.com/kylo-pl-bucket/cmake-3.2.3-Linux-x86_64.tar.gz
  - tar xzvf cmake-3.2.3-Linux-x86_64.tar.gz --strip 1 -C $USERDIR
  # grab a pre-built cppcheck from s3
  - wget https://s3.amazonaws.com/kylo-pl-bucket/pcre-8.36_install.tar.bz2
  - tar xjvf pcre-8.36_install.tar.bz2 --strip 1 -C $USERDIR
  - wget https://s3.amazonaws.com/kylo-pl-bucket/cppcheck-1.69_install.tar.bz2
  - tar xjvf cppcheck-1.69_install.tar.bz2 --strip 1 -C $USERDIR
  # grab a pre-built doxygen 1.8.7 from s3
  - wget https://s3.amazonaws.com/kylo-pl-bucket/doxygen_install.tar.bz2
  - tar xjvf doxygen_install.tar.bz2 --strip 1 -C $USERDIR
  # Install dependencies of cfacter
  - wget https://s3.amazonaws.com/kylo-pl-bucket/yaml-cpp-0.5.1_install.tar.bz2
  - tar xjvf yaml-cpp-0.5.1_install.tar.bz2 --strip 1 -C $USERDIR
  # Install coveralls.io update utility
  - pip install --user cpp-coveralls
  - export CC=gcc-4.8 CXX=g++-4.8

script: if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then ./scripts/travis_target.sh ; fi

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "ftI7BV1urhuEd2TixJb3dYjixB98H3d+SSTBnZMSP7XCRnvw0ztVHK8b452tnTbz/8K7+78Dg4tQMEJyKFkIp7YNjF/0nZwhVY/jfCmcYi/zX1mliJGBjdeOBLXWnJLNBFsyusMd7MvCzaZNR5oVSNXXxJJ8+dFQpWnN2B8PdVk="
    - USERDIR=/tmp/userdir
    - PYTHONUSERBASE=$USERDIR
    - PATH=$USERDIR/bin:$PATH
    - LD_LIBRARY_PATH=$USERDIR/lib:$LD_LIBRARY_PATH
