name: run_win_cmake_and_make

inputs:
  cmake_extra_vars:
    description: extra vars for cmake
    type: string

runs:
  using: "composite"
  steps:
    - name: install the required tools
      shell: pwsh
      run: |
        mkdir C:\tools\pl-build-tools\bin
        Write-Output "Get-ToolsLocation `$args" | Out-File C:\tools\pl-build-tools\bin\Get-BinRoot.ps1
        $env:PATH="C:\tools\pl-build-tools\bin;$env:PATH"
        choco install -y mingw-w64 -Version 5.2.0 -source https://www.myget.org/F/puppetlabs
        choco install -y cmake -Version 3.2.2 -source https://www.myget.org/F/puppetlabs
        choco install -y gettext -Version 0.19.6 -source https://www.myget.org/F/puppetlabs
        choco install -y pl-toolchain-x64 -Version 2015.12.01.1 -source https://www.myget.org/F/puppetlabs
        choco install -y pl-boost-x64 -Version 1.58.0.2 -source https://www.myget.org/F/puppetlabs
        choco install -y pl-openssl-x64 -Version 1.0.24.1 -source https://www.myget.org/F/puppetlabs
        choco install -y pl-curl-x64 -Version 7.46.0.1 -source https://www.myget.org/F/puppetlabs

    - name: run make
      shell: pwsh
      run: |
        $env:PATH = $env:PATH.Replace("Git\bin", "Git\cmd")
        $env:PATH = $env:PATH.Replace("Git\usr\bin", "Git\cmd")
        $env:PATH = "C:\Ruby21-x64\bin;C:\tools\mingw64\bin;C:\tools\pl-build-tools;C:\Program Files\gettext-iconv;$env:PATH"
        cmake -G "MinGW Makefiles" -DCMAKE_TOOLCHAIN_FILE="C:\tools\pl-build-tools\pl-build-toolchain.cmake" -DCMAKE_PREFIX_PATH=C:/tools/pl-build-tools -DCMAKE_INSTALL_PREFIX=C:/tools/leatherman -DBOOST_STATIC=ON -DLEATHERMAN_SHARED=ON ${{ inputs.cmake_extra_vars }} .
        mingw32-make -j2
        ctest -V 2>&1 | %{ if ($_ -is [System.Management.Automation.ErrorRecord]) { $_ | c++filt } else { $_ } }
